/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xdev_gmdev_GM */

#ifndef _Included_xdev_gmdev_GM
#define _Included_xdev_gmdev_GM
#ifdef __cplusplus
extern "C" {
#endif
#undef xdev_gmdev_GM_DEFAULT_HPORT
#define xdev_gmdev_GM_DEFAULT_HPORT 7L
#undef xdev_gmdev_GM_RECEIVES_BEFORE_WAIT
#define xdev_gmdev_GM_RECEIVES_BEFORE_WAIT 20000L
#undef xdev_gmdev_GM_SENDS_BEFORE_WAIT
#define xdev_gmdev_GM_SENDS_BEFORE_WAIT 40000L
#undef xdev_gmdev_GM_KNOWN_VPORTS
#define xdev_gmdev_GM_KNOWN_VPORTS 128L
#undef xdev_gmdev_GM_VPORTS
#define xdev_gmdev_GM_VPORTS 1024L
#undef xdev_gmdev_GM_MAX_HPORTS
#define xdev_gmdev_GM_MAX_HPORTS 8L
#undef xdev_gmdev_GM_MAX_MESSAGE_SIZE
#define xdev_gmdev_GM_MAX_MESSAGE_SIZE 10000000L
/*
 * Class:     xdev_gmdev_GM
 * Method:    gmInit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xdev_gmdev_GM_gmInit
  (JNIEnv *, jclass);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmFinalize
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xdev_gmdev_GM_gmFinalize
  (JNIEnv *, jclass);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmOpen
 * Signature: (IILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xdev_gmdev_GM_gmOpen
  (JNIEnv *, jclass, jint, jint, jstring);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmClose
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_xdev_gmdev_GM_gmClose
  (JNIEnv *, jclass, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmReceive
 * Signature: (II[BII)J
 */
JNIEXPORT jlong JNICALL Java_xdev_gmdev_GM_gmReceive
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmSend
 * Signature: (IIIII[BII)J
 */
JNIEXPORT jlong JNICALL Java_xdev_gmdev_GM_gmSend
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmNumPorts
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmNumPorts
  (JNIEnv *, jclass, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmMaxMessageSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmMaxMessageSize
  (JNIEnv *, jclass);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmMaxThreads
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmMaxThreads
  (JNIEnv *, jclass, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmGetNodeID
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmGetNodeID__I
  (JNIEnv *, jclass, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmGetNodeID
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmGetNodeID__ILjava_lang_String_2
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmGetNodeID
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_xdev_gmdev_GM_gmGetNodeID__I_3B
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmGetHostName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xdev_gmdev_GM_gmGetHostName
  (JNIEnv *, jclass, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmGetUID
 * Signature: (II)[B
 */
JNIEXPORT jbyteArray JNICALL Java_xdev_gmdev_GM_gmGetUID
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     xdev_gmdev_GM
 * Method:    gmDump
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_xdev_gmdev_GM_gmDump
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
